# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'x64'
  buildConfiguration: 'Release'

steps:

- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '3.1.x'
    
# - task: DotNetCoreCLI@2
#   displayName: 'dotnet restore'
#   inputs:
#     command: 'restore'
#     projects: '**/*.csproj'
#     feedsToUse: 'select'
#     verbosityRestore: 'Minimal'

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: 'MassEffectModManagerCore/MassEffectModManagerCore.csproj'
    arguments: '-c Release'

- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: 'MassEffectModManagerCore.Tests\\MassEffectModManagerCore.Tests.csproj'
    arguments: '--configuration $(BuildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:Include=ME3TweaksModManager'

# Generate the report using ReportGenerator (https://github.com/danielpalme/ReportGenerator)
# First install the tool on the machine, then run it
- script: |
    dotnet tool install -g dotnet-reportgenerator-globaltool
    reportgenerator -reports:MassEffectModManagerCore.Tests/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/CodeCoverage -reporttypes:HtmlInline_AzurePipelines;Cobertura
  displayName: Create Code coverage report

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(Build.SourcesDirectory)/CodeCoverage/Cobertura.xml'
    reportDirectory: '$(Build.SourcesDirectory)/CodeCoverage'
