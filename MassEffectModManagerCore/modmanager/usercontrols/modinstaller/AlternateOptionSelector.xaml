<UserControl x:Class="ME3TweaksModManager.modmanager.usercontrols.modinstaller.AlternateOptionSelector"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ME3TweaksModManager.modmanager.usercontrols.modinstaller"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             mc:Ignorable="d"
             x:Name="AOS"
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid Margin="0">
        <!-- Single Selector -->
        <DockPanel Visibility="{Binding GroupName, Converter={StaticResource NullVisibilityConverter}, ConverterParameter='Reversed'}">
            <CheckBox DockPanel.Dock="Left"/>
            <local:SingleAlternateOptionPanel DataContext="{Binding SelectedOption}"/>
        </DockPanel>

        <!-- Multi Selector -->
        <xctk:DropDownButton IsOpen="{Binding IsDropdownOpen, ElementName=AOS}" Visibility="{Binding GroupName, Converter={StaticResource NullVisibilityConverter}}" HorizontalContentAlignment="Stretch">
            <DockPanel>
                <TextBlock Text="{Binding GroupNameTitleText}" TextWrapping="Wrap" Visibility="{Binding GroupName, Converter={StaticResource NullVisibilityConverter}}" FontWeight="Bold" DockPanel.Dock="Top"/>
                <local:SingleAlternateOptionPanel DataContext="{Binding SelectedOption}"/>
            </DockPanel>
            <xctk:DropDownButton.DropDownContent>
                <ItemsControl ItemsSource="{Binding OtherOptions}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <local:SingleAlternateOptionPanel DataContext="{Binding}" MouseUp="AlternateItem_MouseUp"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </xctk:DropDownButton.DropDownContent>
        </xctk:DropDownButton>
    </Grid>
    <!--<Grid
        Margin="0,0,0,5"
        MouseUp="AlternateItem_MouseUp"
        ToolTipService.IsEnabled="{Binding ImageBitmap, Converter={StaticResource NotNullToBoolConverter}}"
        ToolTipService.InitialShowDelay="0"
        ToolTipService.BetweenShowDelay="0">
        <Grid.ToolTip>
            <ToolTip
                Placement="Right"
                Background="{DynamicResource {x:Static adonisUi:Brushes.Layer1BackgroundBrush}}"
                BorderThickness="0"
                VerticalOffset="{Binding ImageHeight, Converter={StaticResource ImageTooltipVerticalOffsetConverter}}">
                <DockPanel>
                    <Image
                        Source="{Binding ImageBitmap}"
                        Height="{Binding ImageHeight}" />
                </DockPanel>
            </ToolTip>
        </Grid.ToolTip>
        <Grid.RowDefinitions>
            <RowDefinition
                Height="Auto" />
            <RowDefinition
                Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition
                Width="25" />
            <ColumnDefinition
                Width="*" />
            <ColumnDefinition
                Width="Auto" />
        </Grid.ColumnDefinitions>
        <CheckBox
            Grid.Row="0"
            Grid.Column="0"
            Grid.RowSpan="2"
            IsEnabled="{Binding UIIsSelectable}"
            Margin="5,0,0,0"
            IsChecked="{Binding IsSelected, Mode=TwoWay}"
            Visibility="{Binding GroupName, Converter={StaticResource NullVisibilityConverter}, ConverterParameter='Reversed'}"
            DockPanel.Dock="Left"
            VerticalContentAlignment="Center"
            VerticalAlignment="Center"
            Padding="0,0,5,0"
            Opacity="{Binding CheckboxOpacity}" />
        <RadioButton
            Grid.Row="0"
            Grid.Column="0"
            Grid.RowSpan="2"
            IsEnabled="{Binding UIIsSelectable}"
            Margin="5,0,0,0"
            IsChecked="{Binding IsSelected, Mode=TwoWay}"
            GroupName="{Binding GroupName}"
            Visibility="{Binding GroupName, Converter={StaticResource NullVisibilityConverter}}"
            DockPanel.Dock="Left"
            VerticalContentAlignment="Center"
            VerticalAlignment="Center"
            Padding="0,0,5,0"
            Opacity="{Binding CheckboxOpacity}" />
        <Grid
            DockPanel.Dock="Top"
            Background="Transparent"
            Grid.Row="0"
            Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition
                    Height="Auto" />
                <RowDefinition
                    Height="Auto" />
                <RowDefinition
                    Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition
                    Width="Auto" />
                <ColumnDefinition
                    Width="Auto" />
            </Grid.ColumnDefinitions>
            <StackPanel
                Orientation="Horizontal">
                <TextBlock
                    Text="{Binding FriendlyName}"
                    VerticalAlignment="Center"
                    DockPanel.Dock="Left"
                    FontWeight="Bold"
                    Opacity="{Binding TextOpacity}" />
                <TextBlock
                    Foreground="LimeGreen"
                    Text="{Binding ApplicableAutoText, StringFormat=' - {0}'}"
                    VerticalAlignment="Center"
                    FontWeight="Bold"
                    Visibility="{Binding UIRequired, Converter={StaticResource BoolToVisibilityConverter}}"
                    Opacity="{Binding TextOpacity}" />
                <TextBlock
                    Foreground="Red"
                    Text="{Binding NotApplicableAutoText, StringFormat=' - {0}'}"
                    VerticalAlignment="Center"
                    FontWeight="Bold"
                    Visibility="{Binding UINotApplicable, Converter={StaticResource BoolToVisibilityConverter}}"
                    Opacity="{Binding TextOpacity}" />
            </StackPanel>
            <TextBlock
                Text="{Binding GroupName, Converter={StaticResource LocalizationConverter}, ConverterParameter='string_interp_optionGroupX'}"
                FontSize="10"
                Foreground="{Binding GroupName, Converter={StaticResource GroupNameToColorConverter}}"
                Grid.Row="1"
                Grid.Column="0"
                Visibility="{Binding GroupName, Converter={StaticResource NullVisibilityConverter}}" />
            <TextBlock
                Grid.Row="2"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                DockPanel.Dock="Bottom"
                Text="{Binding Description}"
                VerticalAlignment="Center"
                HorizontalAlignment="Left"
                TextWrapping="Wrap"
                Foreground="{DynamicResource {x:Static adonisUi:Brushes.SlightlyDimmedForegroundBrush}}"
                MaxWidth="410"
                FontSize="11"
                Padding="0,0,20,0"
                Opacity="{Binding TextOpacity}" />
        </Grid>
        <DockPanel
            Grid.RowSpan="2"
            Grid.Row="0"
            Grid.Column="2"
            Background="Transparent">
            <fa5:ImageAwesome
                Icon="Solid_Image"
                Height="16"
                Margin="10,0"
                Opacity="0.75"
                VerticalAlignment="Center"
                Foreground="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}"
                Visibility="{Binding ImageBitmap, Converter={StaticResource NullVisibilityConverter}}" />
        </DockPanel>
        <Grid.Style>
            <Style
                TargetType="{x:Type Grid}">
                <Style.Triggers>
                    <Trigger
                        Property="IsMouseOver"
                        Value="True">
                        <Setter
                            Property="Background"
                            Value="{DynamicResource {x:Static adonisUi:Brushes.HoverBackgroundBrush}}" />
                        <Setter
                            Property="Cursor"
                            Value="Hand" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Grid.Style>
    </Grid>-->
</UserControl>
